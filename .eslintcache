[{"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\index.js":"1","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\App.js":"2","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\reportWebVitals.js":"3","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Skills.js":"4","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\shared\\courses.js":"5","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\SkillDetails.js":"6","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\MainContainer.js":"7","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Header.js":"8","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Footer.js":"9","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Home.js":"10","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\About.js":"11","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Contact.js":"12","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Projects.js":"13","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\shared\\projects.js":"14","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\redux\\configureStore.js":"15","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\redux\\courses.js":"16","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\redux\\projects.js":"17"},{"size":643,"mtime":1608537654235,"results":"18","hashOfConfig":"19"},{"size":551,"mtime":1609146317728,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1531,"mtime":1608705130679,"results":"22","hashOfConfig":"19"},{"size":4614,"mtime":1608539541449,"results":"23","hashOfConfig":"19"},{"size":1031,"mtime":1608705378457,"results":"24","hashOfConfig":"19"},{"size":2259,"mtime":1609152249295,"results":"25","hashOfConfig":"19"},{"size":4713,"mtime":1608963066353,"results":"26","hashOfConfig":"19"},{"size":2637,"mtime":1608624137763,"results":"27","hashOfConfig":"19"},{"size":908,"mtime":1608540917671,"results":"28","hashOfConfig":"19"},{"size":994,"mtime":1608623405934,"results":"29","hashOfConfig":"19"},{"size":8009,"mtime":1609154478123,"results":"30","hashOfConfig":"19"},{"size":4689,"mtime":1609160334271,"results":"31","hashOfConfig":"19"},{"size":3545,"mtime":1608704414078,"results":"32","hashOfConfig":"19"},{"size":344,"mtime":1609327642207,"results":"33","hashOfConfig":"19"},{"size":205,"mtime":1609327326626,"results":"34","hashOfConfig":"19"},{"size":219,"mtime":1609327373952,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1120iln",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\index.js",[],["73","74"],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\App.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\reportWebVitals.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Skills.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\shared\\courses.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\SkillDetails.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\MainContainer.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Header.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Footer.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Home.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\About.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Contact.js",["75","76","77","78","79","80","81"],"import { Component } from 'react';\r\nimport { ListGroup, ListGroupItem, Label, Button, FormGroup } from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    /*onBlur=(field)=>(evt)=> {\r\n        this.setState({\r\n            touched:{...this.state.touched,[field]: true}\r\n        })\r\n    }*/\r\n\r\n    // to show the value when we type in form (since form is tied to controlling state)\r\n    /*OnInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }*/\r\n\r\n    onSubmit(values) {\r\n        \r\n        console.log(\"Current state is:\" + JSON.stringify(values));\r\n        alert(\"Current state is:\" + JSON.stringify(values));\r\n        //event.preventDefault(); // to prevent going to previous page\r\n    }\r\n\r\n    /*validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''            \r\n        }\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3) {\r\n            errors.firstname='Firstname should be of 3 or more characters'\r\n        }\r\n        else if (this.state.touched.firstname && firstname.length > 10) {\r\n            errors.firstname='Firstname should be of less than 11 characters'    \r\n        }\r\n        if (this.state.touched.lastname && lastname.length < 3) {\r\n            errors.lastname='Lastname should be of 3 or more characters'\r\n        }\r\n        else if (this.state.touched.lastname && lastname.length > 10) {\r\n            errors.lastname='Lastname should be of less than 11 characters'    \r\n        }\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum)) {\r\n            errors.telnum='Telephone number is not valid'\r\n        }\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) {\r\n            errors.email='Email should contain @'\r\n        }\r\n\r\n        return errors;\r\n    }*/\r\n\r\n    render() {\r\n        //const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"text-center container mt-5\">\r\n                <h2>Contact</h2>\r\n                <div className=\"text-left mt-5 mb-5 container\" style={{ maxWidth: \"720px\" }}>\r\n                    <ListGroup>\r\n                        <ListGroupItem className=\"border-info\">                        \r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678\r\n                        </ListGroupItem>\r\n                        <ListGroupItem className=\"border-info\">\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\r\n                        </ListGroupItem>\r\n                        <ListGroupItem className=\"border-info\">\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:biswas.manali8@gmail.com\">\r\n                            biswas.manali8@gmail.com</a>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h3>Send your feedback</h3>\r\n                <div className=\"container\">\r\n                    <LocalForm onSubmit={(values)=>this.onSubmit(values)}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"firstname\">First Name</Label>\r\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators={{required,minLength:minLength(3),maxLength:maxLength(15)}}/>\r\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                minLength: \"Minimum 2 characters required\",\r\n                                maxLength: \"Maximum 15 characters allowed\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"lastname\">Last Name</Label>\r\n                            <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" validators={{required,minLength:minLength(3),maxLength:maxLength(15)}}/>\r\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                minLength: \"Minimum 2 characters required\",\r\n                                maxLength: \"Maximum 15 characters allowed\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"telnum\">Telephone Number</Label>\r\n                            <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. number\" validators={{required,minLength:minLength(3),maxLength:maxLength(15),isNumber}}/>\r\n                            <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                minLength: \"Minimum 2 numbers required\",\r\n                                maxLength: \"Maximum 15 numbers allowed\",\r\n                                isNumber: \"Must be a number\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\" validators={{required,validEmail}}/>\r\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                validEmail: \"Invalid Email Address\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check htmlFor=\"agree\">\r\n                                <Control.checkbox model=\".agree\" className=\"form-check-input\" name=\"agree\"/> {' '}\r\n                                <strong>May we contact you?</strong>\r\n                                </Label>\r\n                            </FormGroup>\r\n                        <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                            <option>Tel.</option>\r\n                            <option>Email</option>\r\n                        </Control.select>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"feedback\">Feedback</Label>\r\n                            <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                        </FormGroup>\r\n                    </LocalForm>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\components\\Projects.js",["82","83","84","85"],"import { Card, CardBody, CardText, CardTitle, Button, Modal, ModalHeader, ModalBody, Row, Col } from \"reactstrap\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { Component } from \"react\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst maxLength = (len) => (val) => !val || (val.length <= len);\r\n\r\nclass Projects extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        this.toggleModal();\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n    }\r\n    \r\n    \r\n    render() {\r\n            \r\n        const RenderProject = this.props.projects.map((project) => {\r\n            return (  \r\n                <Card key={project.id} className=\"mb-3 border-dark\">\r\n                    <CardBody>\r\n            <CardTitle tag=\"h4\">\r\n            {project.name}\r\n        </CardTitle>\r\n        <CardText>\r\n            {project.description}\r\n        </CardText>\r\n        {/* Separate components for link and github link */}\r\n            <a href={project.link} className=\"btn btn-primary\">Hosted Project Link</a>\r\n            <a href={project.github} className=\"btn btn-dark ml-3\">Github Link</a>\r\n        </CardBody>\r\n        </Card>\r\n            )\r\n        }  \r\n        );\r\n        \r\n    return (\r\n        <>\r\n        <div className=\"container mt-5 mb-5 text-center\">\r\n            <h2>Projects on {this.props.course_name}</h2>\r\n            <div className=\"mt-5 container w-75\">\r\n                {RenderProject}\r\n            </div>\r\n            <Button color=\"outline-primary\" onClick={this.toggleModal}>Add Project</Button>\r\n        </div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader>Add Project</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"container\">\r\n                <LocalForm onSubmit={this.onSubmit}>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"name\">Project Name</Col>\r\n                                <Control.text model=\".name\" id=\"name\" name=\"name\" placeholder=\"Project Name\" className=\"col-md-8 form-control\" validators={{ required, minLength:minLength(2) }} />\r\n                                <Errors className=\"text-danger\" model=\".name\" show=\"touched\" messages={{\r\n                                    required: \"Project name is required\",\r\n                                    minLength: \"Minimum 2 characters required\"\r\n                                }}/>\r\n                    </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"description\">Project Description</Col>\r\n                                <Control.textarea model=\".description\" id=\"description\" name=\"description\" rows=\"12\" placeholder=\"Project Description\" className=\"col-md-8 form-control\" validators={{ required, maxLength: maxLength(30) }} />\r\n                                <Errors className=\"text-danger\" model=\".description\" show=\"touched\" messages={{\r\n                                    required: \"Project description is required\",\r\n                                    maxLength: \"Maximum 30 characters allowed\"\r\n                                }}/>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"link\">Project Link</Col>\r\n                                <Control.text type=\"url\" model=\".link\" id=\"link\" name=\"link\" placeholder=\"Project link\" className=\"col-md-8 form-control\"/>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"github\">Github Link</Col>\r\n                                <Control.text type=\"url\" model=\".github\" id=\"github\" name=\"github\" placeholder=\"Github link\" className=\"col-md-8 form-control\"/>\r\n                        </Row>\r\n                        <Row>\r\n                            <Button type=\"submit\" color=\"primary\" value=\"submit\">Submit</Button>\r\n                        </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n            </ModalBody>\r\n            </Modal>\r\n            </>\r\n    )}\r\n}\r\n\r\nexport default Projects;","C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\shared\\projects.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\redux\\configureStore.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\redux\\courses.js",[],"C:\\Users\\manali.biswas\\Reactproject\\firstapp\\src\\redux\\projects.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":102,"column":29,"nodeType":"92","endLine":102,"endColumn":216},{"ruleId":"90","severity":1,"message":"91","line":111,"column":29,"nodeType":"92","endLine":111,"endColumn":212},{"ruleId":"90","severity":1,"message":"91","line":120,"column":29,"nodeType":"92","endLine":120,"endColumn":217},{"ruleId":"90","severity":1,"message":"91","line":130,"column":29,"nodeType":"92","endLine":130,"endColumn":163},{"ruleId":"90","severity":1,"message":"93","line":139,"column":33,"nodeType":"92","endLine":139,"endColumn":109},{"ruleId":"90","severity":1,"message":"94","line":143,"column":25,"nodeType":"92","endLine":143,"endColumn":106},{"ruleId":"90","severity":1,"message":"95","line":150,"column":29,"nodeType":"92","endLine":150,"endColumn":128},{"ruleId":"90","severity":1,"message":"91","line":72,"column":33,"nodeType":"92","endLine":72,"endColumn":196},{"ruleId":"90","severity":1,"message":"95","line":80,"column":33,"nodeType":"92","endLine":80,"endColumn":240},{"ruleId":"90","severity":1,"message":"91","line":88,"column":33,"nodeType":"92","endLine":88,"endColumn":156},{"ruleId":"90","severity":1,"message":"91","line":92,"column":33,"nodeType":"92","endLine":92,"endColumn":161},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]