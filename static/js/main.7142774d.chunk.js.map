{"version":3,"sources":["components/Header.js","components/Footer.js","components/SkillDetails.js","components/Loading.js","shared/baseUrl.js","components/Skills.js","components/Home.js","components/About.js","components/Contact.js","components/Projects.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainContainer.js","redux/courses.js","redux/projects.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","preventDefault","Navbar","className","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","isOpen","Nav","NavItem","to","Button","outline","color","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","id","name","innerRef","input","check","Component","Footer","SkillDetails","course","courseskills","skills","map","skill","ListGroupItem","tag","CardHeader","date","CardBody","CardTitle","CardText","description","ListGroup","Loading","baseUrl","RenderCourse","selectedCourse","Card","CardImg","width","src","image","alt","Skills","coursesLoading","coursesErr","courses","Home","style","height","Media","About","maxWidth","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","values","console","log","JSON","stringify","resetFeedbackForm","model","text","placeholder","validators","show","messages","checkbox","select","textarea","rows","RenderLink","link","undefined","RenderGithub","github","Projects","addProject","projectsErr","RenderProject","projects","project","Row","Col","ADD_PROJECT","COURSES_LOADING","COURSES_FAILED","ADD_COURSES","ADD_PROJECTS","PROJECTS_FAILED","ActionTypes","addCourses","payload","fetchProjects","dispatch","axios","get","then","response","data","Main","fetchCourses","exact","path","component","filter","featured","isLoading","err","onCourseClick","match","courseId","parseInt","params","courseProjects","course_id","withRouter","connect","actions","reset","Courses","action","concat","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","message","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7142774d.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { Jumbotron, Navbar, NavbarBrand, Nav, NavItem, Collapse, NavbarToggler,Modal, ModalHeader, ModalBody, Button, FormGroup, Form, Label, Input } from 'reactstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Navbar className=\"navbar-dark bg-dark\" expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"/\">Demo</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n\r\n                        <Collapse navbar isOpen={this.state.isNavOpen}>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/skills\">Skills</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/about\">About</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contact\">Contact</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline color=\"light\" onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            </Collapse>\r\n                    </div>\r\n            </Navbar>\r\n            <Jumbotron className=\"x\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Courses I have studied</h1>\r\n                                <p>Online courses taken up from Coursera and Udemy</p>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef= {(input)=>this.username=input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Username</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef= {(input)=>this.password=input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" \r\n                                    innerRef= {(input)=>this.remember=input} />\r\n                                    Remember Me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/about\">About</Link></li>\r\n                        <li><Link to=\"/skills\">Skills</Link></li>\r\n                        <li><Link to=\"/contact\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:biswas.manali8@gmail.com\">\r\n                         biswas.manali8@gmail.com</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2020 Manali Biswas</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import { CardHeader, CardBody, CardTitle, CardText, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SkillDetails({ course }) {\r\n\r\n    const courseskills = course.skills.map((skill) => {\r\n        return (\r\n            <ListGroupItem tag=\"li\" key={skill.id} className=\"border-info\">\r\n                {skill.name}\r\n            </ListGroupItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <CardHeader>{course.date}</CardHeader>\r\n            <CardBody className=\"text-center text-info\">\r\n                <CardTitle><h2>{course.name}</h2></CardTitle>\r\n                <CardText><p>{course.description}</p></CardText>\r\n                <ListGroup className=\"list-group-flush text-left\" tag=\"ul\">\r\n                    {courseskills}\r\n                </ListGroup>\r\n                <br/>\r\n                <Link to={`/skills/${course.id}`} className=\"btn btn-info\">Click here for projects</Link>\r\n            </CardBody>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SkillDetails;","export const Loading = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}","export const baseUrl = 'https://manali-biswas.github.io/data/';","import { Card, CardBody, CardHeader, CardImg, CardTitle } from 'reactstrap';\r\nimport SkillDetails from './SkillDetails';\r\nimport { Loading } from './Loading';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction RenderCourse({ selectedCourse, course, onClick }) {\r\n    if (course != null) {\r\n        if (selectedCourse === course) {\r\n            return (\r\n                <Card className=\"h-100 border-info\" onClick={() => onClick(null)}>\r\n                    <SkillDetails course={course} />\r\n                </Card>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <Card className=\"h-100\" onClick={() => onClick(course)}>\r\n                    <CardHeader>{course.date}</CardHeader>\r\n                    <CardImg width=\"150px\" src={ baseUrl+'public/'+course.image } alt={course.name} />\r\n                    <CardBody className=\"text-center\">\r\n                        <CardTitle><h5>{course.name}</h5></CardTitle>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Skills = (props) => {\r\n\r\n    if (props.coursesLoading) {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                    <Loading />\r\n            </div>    \r\n        )\r\n    }\r\n\r\n    else if (props.coursesErr) {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h4>{ props.coursesErr }</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const skills = props.courses.map((course) => {\r\n        return (\r\n            <div key={course.id} className=\"col-12 col-md-4 mb-3 mt-3\">\r\n                <RenderCourse course={course} onClick={props.onClick} selectedCourse={props.selectedCourse}/>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {skills}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Skills;\r\n","import { Media } from \"reactstrap\";\r\nimport { Loading } from './Loading';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction Home(props) {\r\n\r\n    if (props.coursesLoading) {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                    <Loading />\r\n            </div>    \r\n        )\r\n    }\r\n\r\n    else if (props.coursesErr) {\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h4>{ props.coursesErr }</h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5 mb-5\">    \r\n        <h2 className=\"text-center\">Home</h2>\r\n        <div className=\"container d-flex flex-column justify-content-center \" style={{ height: \"90vh\" }}>\r\n            <p>This is a personal website to keep track of all the courses I have taken up so far and the skills I built.\r\n             \r\n            Below is the course that I liked the most so far!\r\n            </p>\r\n            <Media className=\"mt-5 mb-3\">\r\n                <img src={baseUrl+'public/'+props.course.image} alt={props.course.name} width=\"100px\"></img>\r\n                <div className=\"media-body ml-5\">\r\n                    <h5>{props.course.name}</h5>\r\n                    <p>{ props.course.description }</p>\r\n                </div>\r\n            </Media>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","function About() {\r\n    return (\r\n        <div className=\"text-center container mt-5\">\r\n            <h2>About</h2>\r\n            <div className=\"mt-5\">\r\n                <img src=\"assets/images/Girl Study.png\" className=\"rounded\" alt=\"Girl\"></img>\r\n                <div className=\"text-left mt-3 mb-5 container\" style={{maxWidth: \"720px\"}}>\r\n                <p>\r\n                    I am Manali Biswas, a third year Computer Engineering student @ Delhi Technological University.\r\n                    I love learning new technologies. I am also a MERN stack developer and ML enthusiast.\r\n                </p>\r\n                <p>\r\n                        This website helps me keep track of all the courses I have learnt and the skills gained.\r\n                        It is useful to track my learning progress. Also, I will know where to refer for specific skills in the future.\r\n                </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import { Component } from 'react';\r\nimport { ListGroup, ListGroupItem, Label, Button, FormGroup } from \"reactstrap\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    /*onBlur=(field)=>(evt)=> {\r\n        this.setState({\r\n            touched:{...this.state.touched,[field]: true}\r\n        })\r\n    }*/\r\n\r\n    // to show the value when we type in form (since form is tied to controlling state)\r\n    /*OnInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }*/\r\n\r\n    onSubmit(values) {\r\n        \r\n        console.log(\"Current state is:\" + JSON.stringify(values));\r\n        alert(\"Current state is:\" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n        //event.preventDefault(); // to prevent going to previous page\r\n    }\r\n\r\n    /*validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''            \r\n        }\r\n\r\n        if (this.state.touched.firstname && firstname.length < 3) {\r\n            errors.firstname='Firstname should be of 3 or more characters'\r\n        }\r\n        else if (this.state.touched.firstname && firstname.length > 10) {\r\n            errors.firstname='Firstname should be of less than 11 characters'    \r\n        }\r\n        if (this.state.touched.lastname && lastname.length < 3) {\r\n            errors.lastname='Lastname should be of 3 or more characters'\r\n        }\r\n        else if (this.state.touched.lastname && lastname.length > 10) {\r\n            errors.lastname='Lastname should be of less than 11 characters'    \r\n        }\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum)) {\r\n            errors.telnum='Telephone number is not valid'\r\n        }\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) {\r\n            errors.email='Email should contain @'\r\n        }\r\n\r\n        return errors;\r\n    }*/\r\n\r\n    render() {\r\n        //const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"text-center container mt-5\">\r\n                <h2>Contact</h2>\r\n                <div className=\"text-left mt-5 mb-5 container\" style={{ maxWidth: \"720px\" }}>\r\n                    <ListGroup>\r\n                        <ListGroupItem className=\"border-info\">                        \r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678\r\n                        </ListGroupItem>\r\n                        <ListGroupItem className=\"border-info\">\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\r\n                        </ListGroupItem>\r\n                        <ListGroupItem className=\"border-info\">\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:biswas.manali8@gmail.com\">\r\n                            biswas.manali8@gmail.com</a>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h3>Send your feedback</h3>\r\n                <div className=\"container\">\r\n                    <Form model=\"feedback\" onSubmit={(values)=>this.onSubmit(values)}>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"firstname\">First Name</Label>\r\n                            <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" className=\"form-control\" validators={{required,minLength:minLength(3),maxLength:maxLength(15)}}/>\r\n                            <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                minLength: \"Minimum 2 characters required\",\r\n                                maxLength: \"Maximum 15 characters allowed\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"lastname\">Last Name</Label>\r\n                            <Control.text model=\".lastname\" className=\"form-control\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" validators={{required,minLength:minLength(3),maxLength:maxLength(15)}}/>\r\n                            <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                minLength: \"Minimum 2 characters required\",\r\n                                maxLength: \"Maximum 15 characters allowed\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"telnum\">Telephone Number</Label>\r\n                            <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. number\" validators={{required,minLength:minLength(3),maxLength:maxLength(15),isNumber}}/>\r\n                            <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                minLength: \"Minimum 2 numbers required\",\r\n                                maxLength: \"Maximum 15 numbers allowed\",\r\n                                isNumber: \"Must be a number\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"email\">Email</Label>\r\n                            <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Email\" validators={{required,validEmail}}/>\r\n                            <Errors className=\"text-danger\" model=\".email\" show=\"touched\" messages={{\r\n                                required: \"Required\",\r\n                                validEmail: \"Invalid Email Address\"\r\n                            }}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check htmlFor=\"agree\">\r\n                                <Control.checkbox model=\".agree\" className=\"form-check-input\" name=\"agree\"/> {' '}\r\n                                <strong>May we contact you?</strong>\r\n                                </Label>\r\n                            </FormGroup>\r\n                        <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\">\r\n                            <option>Tel.</option>\r\n                            <option>Email</option>\r\n                        </Control.select>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label htmlFor=\"feedback\">Feedback</Label>\r\n                            <Control.textarea model=\".message\" id=\"message\" name=\"message\" rows=\"12\" className=\"form-control\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import { Card, CardBody, CardText, CardTitle, Button, Modal, ModalHeader, ModalBody, Row, Col } from \"reactstrap\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { Component } from \"react\";\r\nimport { Loading } from './Loading';\r\n\r\nconst required = (val) => val && val.length;\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst maxLength = (len) => (val) => !val || (val.length <= len);\r\n\r\nfunction RenderLink({ link }) {\r\n    if (link === undefined) {\r\n        return (    \r\n            <a href={link} className=\"btn btn-primary disabled\">Hosted Project Link</a>\r\n        )\r\n    }\r\n    else {\r\n        return (    \r\n            <a href={link} className=\"btn btn-primary\">Hosted Project Link</a>\r\n        )    \r\n    }\r\n}\r\n\r\nfunction RenderGithub({ github }) {\r\n    if (github === undefined) {\r\n        return (    \r\n            <a href={github} className=\"btn btn-dark ml-3 disabled\">Github Link</a>\r\n        )\r\n    }\r\n    else {\r\n        return (    \r\n            <a href={github} className=\"btn btn-dark ml-3\">Github Link</a>\r\n        )    \r\n    }\r\n}\r\n\r\nclass Projects extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.addProject(this.props.course.id, values.name, values.description, values.link, values.github);\r\n    }\r\n    \r\n    \r\n    render() {\r\n            \r\n        if (this.props.coursesLoading) {\r\n            return (\r\n                <div className=\"container text-center\">\r\n                        <Loading />\r\n                </div>    \r\n            )\r\n        }\r\n    \r\n        else if (this.props.coursesErr) {\r\n            return (\r\n                <div className=\"container text-center\">\r\n                    <h4>{ this.props.coursesErr }</h4>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        else if (this.props.projectsErr) {\r\n            return (\r\n                <div className=\"container text-center\">\r\n                    <h4>{ this.props.projectsErr }</h4>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        const RenderProject = this.props.projects.map((project) => {\r\n            return (  \r\n                <Card key={project.id} className=\"mb-3 border-dark\">\r\n                    <CardBody>\r\n            <CardTitle tag=\"h4\">\r\n            {project.name}\r\n        </CardTitle>\r\n        <CardText>\r\n            {project.description}\r\n        </CardText>\r\n            <RenderLink link={ project.link }/>\r\n            <RenderGithub github={ project.github }/>\r\n        </CardBody>\r\n        </Card>\r\n            )\r\n        }  \r\n        );\r\n        \r\n    return (\r\n        <>\r\n        <div className=\"container mt-5 mb-5 text-center\">\r\n            <h2>Projects on {this.props.course.name}</h2>\r\n            <div className=\"mt-5 container w-75\">\r\n                {RenderProject}\r\n            </div>\r\n            <Button color=\"outline-primary\" onClick={this.toggleModal}>Add Project</Button>\r\n        </div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader>Add Project</ModalHeader>\r\n                <ModalBody>\r\n                    <div className=\"container\">\r\n                        <LocalForm onSubmit={this.onSubmit}>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"name\">Project Name</Col>\r\n                                <Control.text model=\".name\" id=\"name\" name=\"name\" placeholder=\"Project Name\" className=\"col-md-8 form-control\" validators={{ required, minLength:minLength(2) }} />\r\n                                <Errors className=\"text-danger\" model=\".name\" show=\"touched\" messages={{\r\n                                    required: \"Project name is required\",\r\n                                    minLength: \"Minimum 2 characters required\"\r\n                                }}/>\r\n                    </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"description\">Project Description</Col>\r\n                                <Control.textarea model=\".description\" id=\"description\" name=\"description\" rows=\"12\" placeholder=\"Project Description\" className=\"col-md-8 form-control\" validators={{ required, maxLength: maxLength(30) }} />\r\n                                <Errors className=\"text-danger\" model=\".description\" show=\"touched\" messages={{\r\n                                    required: \"Project description is required\",\r\n                                    maxLength: \"Maximum 30 characters allowed\"\r\n                                }}/>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"link\">Project Link</Col>\r\n                                <Control.text type=\"url\" model=\".link\" id=\"link\" name=\"link\" placeholder=\"Project link\" className=\"col-md-8 form-control\"/>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col className=\"label col-md-4\" htmlFor=\"github\">Github Link</Col>\r\n                                <Control.text type=\"url\" model=\".github\" id=\"github\" name=\"github\" placeholder=\"Github link\" className=\"col-md-8 form-control\"/>\r\n                        </Row>\r\n                        <Row>\r\n                            <Button type=\"submit\" color=\"primary\" value=\"submit\">Submit</Button>\r\n                        </Row>\r\n                        </LocalForm>\r\n                        </div>\r\n            </ModalBody>\r\n            </Modal>\r\n            </>\r\n    )}\r\n}\r\n\r\nexport default Projects;","export const ADD_PROJECT = 'ADD_PROJECT';\r\nexport const COURSES_LOADING = 'COURSES_LOADING';\r\nexport const COURSES_FAILED = 'COURSES_FAILED';\r\nexport const ADD_COURSES = 'ADD_COURSES';\r\nexport const ADD_PROJECTS = 'ADD_PROJECTS';\r\nexport const PROJECTS_FAILED = 'PROJECTS_FAILED';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport axios from 'axios';\r\n\r\nexport const addProject = (courseId, name, description, link, github) => ({\r\n    type: ActionTypes.ADD_PROJECT,\r\n    payload: {\r\n        course_id: courseId,\r\n        name: name,\r\n        description: description,\r\n        link: link,\r\n        github: github\r\n    }\r\n});\r\n\r\nexport const fetchCourses = () => (dispatch) => {\r\n    dispatch(coursesLoading(true));\r\n\r\n    return axios.get(baseUrl + 'db.json')\r\n        .then(response => dispatch(addCourses(response.data.courses)));\r\n}\r\n\r\nexport const coursesLoading = () => ({\r\n    type: ActionTypes.COURSES_LOADING\r\n});\r\n\r\nexport const coursesFailed = (err) => ({\r\n    type: ActionTypes.COURSES_FAILED,\r\n    payload: err\r\n});\r\n\r\nexport const addCourses = (courses) => ({\r\n    type: ActionTypes.ADD_COURSES,\r\n    payload: courses\r\n});\r\n\r\nexport const projectsFailed = (err) => ({\r\n    type: ActionTypes.PROJECTS_FAILED,\r\n    payload: err\r\n});\r\n\r\nexport const addProjects = (projects) => ({\r\n    type: ActionTypes.ADD_PROJECTS,\r\n    payload: projects\r\n});\r\n\r\nexport const fetchProjects = () => (dispatch) => {\r\n    return axios.get(baseUrl + 'db.json')\r\n        .then(response => dispatch(addProjects(response.data.projects)));\r\n}","// Pseudo Container component\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Skills from \"./Skills\";\r\nimport Home from \"./Home\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Projects from \"./Projects\";\r\nimport { Component } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { addProject, fetchCourses, fetchProjects } from \"../redux/ActionCreators\";\r\nimport { actions } from \"react-redux-form\";\r\n\r\n//mapping redux store state with main component\r\nconst mapStateToProps = state => {\r\n    return {\r\n        courses: state.courses,\r\n        courseProjects: state.courseProjects\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addProject: (courseId, name, description, link, github) => dispatch(addProject(courseId, name, description, link, github)),\r\n    fetchCourses: () => dispatch(fetchCourses()),\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchProjects: () => dispatch(fetchProjects())\r\n})\r\n    \r\n    \r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state={\r\n            selectedCourse: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchCourses();\r\n        this.props.fetchProjects();\r\n    }\r\n\r\n    onCourseClick(course) {\r\n        this.setState({ selectedCourse: course });\r\n    }\r\n\r\n    render() {\r\n\r\n        \r\n        const ProjectsWithCourseId = ({ match }) => {\r\n            const courseId = parseInt(match.params.id);\r\n            return (\r\n                <Projects course={this.props.courses.courses.filter((course) => course.id === courseId)[0]} projects={this.props.courseProjects.projects.filter((project) => project.course_id === courseId)}\r\n                    addProject={ this.props.addProject } coursesLoading={this.props.courses.isLoading}\r\n                    coursesErr={ this.props.courses.err } projectsErr={ this.props.courseProjects.err }/>\r\n            )\r\n        }\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home course={this.props.courses.courses.filter((course) => course.featured)[0]}\r\n                    coursesLoading={this.props.courses.isLoading}\r\n                    coursesErr={ this.props.courses.err }/>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={HomePage} />\r\n                    <Route exact path=\"/skills\" component={ () => <Skills courses={this.props.courses.courses} onClick={(course) => this.onCourseClick(course)} selectedCourse={this.state.selectedCourse} coursesLoading={this.props.courses.isLoading}\r\n                    coursesErr={ this.props.courses.err }/>} />\r\n                    <Route exact path=\"/about\" component={About} />\r\n                    <Route exact path=\"/contact\" component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm}/>} />\r\n                    <Route path=\"/skills/:id\" component={ ProjectsWithCourseId }/>\r\n                    <Redirect to=\"/\" />\r\n                    </Switch> \r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n// use withRouter if using react-router","//courses reducer\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Courses = (state = {\r\n    isLoading: true,\r\n    err: null,\r\n    courses: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COURSES:\r\n            return { ...state, isLoading: false, err: null, courses: action.payload };\r\n\r\n        case ActionTypes.COURSES_LOADING:\r\n            return { ...state, isLoading: true, err: null, courses: [] };\r\n        \r\n        case ActionTypes.COURSES_FAILED:\r\n            return { ...state, isLoading: false, err: action.payload, courses: [] };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","//projects reducer function\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Projects = (state = {\r\n    err: null,\r\n    projects:[]\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROJECTS:\r\n            return { ...state, err: null, projects: action.payload };\r\n        \r\n        \r\n        case ActionTypes.PROJECTS_FAILED:\r\n            return { ...state, err: action.payload, projects: [] };\r\n        \r\n        case ActionTypes.ADD_PROJECT:\r\n            var project = action.payload;\r\n            project.id = state.projects.length;\r\n            return { ...state, projects: state.projects.concat(project) }; // adding to memory\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message:''\r\n}","import './App.css';\nimport Main from './components/MainContainer';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"./redux/configureStore\";\n\n\nconst store = configureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <Main />\n        </div>\n        </BrowserRouter>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport { Courses } from \"./courses\";\r\nimport { Projects } from \"./projects\";\r\nimport { InitialFeedback } from \"./forms\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nexport const configureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            courses: Courses,\r\n            courseProjects: Projects,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}